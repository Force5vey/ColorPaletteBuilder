<Window
    x:Class="ColorPaletteBuilder.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:ColorPaletteBuilder"
    mc:Ignorable="d"
    Title="Color Palette Builder">


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Width="2000" Height="30">

            <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE790;" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,5,20,0"/>
            <TextBlock Text="Color Palette Builder:" Margin="0,5,0,0"/>
            <TextBlock x:Name="TitleBarFileName" Text="" Width="250" Margin="10,5,0,0"/>
            <TextBlock x:Name="TitleBarMessage" Text="" Margin="0,5,0,0" Foreground="#FFFFD864"/>
        </StackPanel>

        <!-- ================================         Menu Bar        =================================================  -->

        <MenuBar Grid.Row="1">
            <MenuBarItem Title="File">
                <MenuFlyoutItem Text="New Palette" Icon="NewFolder" Click="NewPalette_Click">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="N"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Load Palette" Icon="OpenLocal" Click="OpenPalette_Click">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="O"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>

                <MenuFlyoutSeparator/>

                <MenuFlyoutItem Text="Save" Icon="Save" Click="SavePalette_Click">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="S"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Save As" Icon="SaveLocal" Click="SavePaletteAs_Click">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control,Shift" Key="S"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>

                <MenuFlyoutSeparator/>

                <MenuFlyoutItem Text="Exit" Click="MenuExit_Click">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Key="F4"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
            </MenuBarItem>

            <MenuBarItem Title="Edit">
                <MenuFlyoutItem Text="Picker">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE759;"/>
                    </MenuFlyoutItem.Icon>

                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="Q"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>

                <MenuFlyoutSeparator/>

                <MenuFlyoutItem Text="Settings" Icon="Setting" Click="OpenSettings_Click">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="I"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
            </MenuBarItem>

            <MenuBarItem Title="Help">
                <MenuFlyoutItem Text="Help">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Key="F1"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>

                <MenuFlyoutSeparator/>

                <MenuFlyoutItem Text="About">
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="Y"/>
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
            </MenuBarItem>
        </MenuBar>


        <!-- =============================          Command Bar (ribbon)           =================================================  -->

        <CommandBar x:Name="MainCommandBar" Grid.Row="2" Background="Transparent" 
                    IsOpen="False" DefaultLabelPosition="Bottom" HorizontalAlignment="Left">

            <AppBarButton Label="New" Icon="NewFolder" Click="NewPalette_Click" ToolTipService.ToolTip="New Color Palette">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Insert"/>
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>

            <AppBarButton Label="Open" Icon="OpenLocal" Click="OpenPalette_Click" ToolTipService.ToolTip="Open Color Palette">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Insert"/>
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>

            <AppBarButton Label="Save" Icon="Save" Click="SavePalette_Click" ToolTipService.ToolTip="Save Current Palette">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Insert"/>
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>

            <AppBarSeparator/>

            <AppBarButton Label="Add" Icon="Add" Click="AddColorEntry_Click" ToolTipService.ToolTip="Add new color entry">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Insert"/>
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>

            <AppBarButton Label="Remove" Icon="Remove" Click="RemoveColorEntry_Click" ToolTipService.ToolTip="Remove the selected color entry">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Delete"/>
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>

            <AppBarSeparator/>

            <AppBarButton Label="Picker" Click="SelectColorButton_Click">
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="Control" Key="Q"/>
                </AppBarButton.KeyboardAccelerators>
                <AppBarButton.Content>
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE759;"/>
                </AppBarButton.Content>
            </AppBarButton>

            <AppBarSeparator/>

            <AppBarSeparator/>

            <AppBarButton Label="Hex" Icon="Copy"/>

            <AppBarButton Label="Hex w/Out Alpha" Icon="Copy"/>

            <AppBarButton Label="RGBA" Icon="Copy"/>





            <CommandBar.SecondaryCommands>
                <AppBarButton Icon="Setting" Label="Settings" Click="OpenSettings_Click">
                    <AppBarButton.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="I" />
                    </AppBarButton.KeyboardAccelerators>
                </AppBarButton>
            </CommandBar.SecondaryCommands>
        </CommandBar>

        <!-- End Command Bar (ribbon)  =================================================  -->

        <Grid Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="350"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>



            <StackPanel Grid.RowSpan="3" Grid.Column="0" Padding="10" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">


                <ScrollViewer Height="Auto" Width="400" ZoomMode="Disabled"
            IsTabStop="True" IsVerticalScrollChainingEnabled="True"
            HorizontalAlignment="Left" VerticalAlignment="Top"
            ViewChanged="LeftScrollViewerControl_ViewChanged"
            HorizontalScrollMode="Disabled" HorizontalScrollBarVisibility="Auto"
            VerticalScrollMode="Enabled" VerticalScrollBarVisibility="Auto">

                    <StackPanel>

                        <ColorPicker x:Name="CustomColorPicker"
                      ColorSpectrumShape="Box"
                      IsMoreButtonVisible="False"
                      IsColorSliderVisible="True"
                      IsColorChannelTextInputVisible="True"
                      IsHexInputVisible="True"
                      IsAlphaEnabled="True"
                      IsAlphaSliderVisible="True"
                      IsAlphaTextInputVisible="True" 
                                     ColorChanged="CustomColorPicker_ColorChanged"/>


                    </StackPanel>
                </ScrollViewer>

                <StackPanel Background="#FF161717">
                    <TextBlock Width="250" Height="3"/>
                </StackPanel>

                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Horizontal" Margin="0,5,0,0">

                    <Button x:Name="btSetColorPicker" Margin="5,0,0,0" ToolTipService.ToolTip="Set Color Picker From Selection">
                        <Button.Content>
                            <StackPanel Orientation="Vertical">
                                <FontIcon Glyph="&#xe7eb;">
                                </FontIcon>
                                <TextBlock Text="Set"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>

                    <Button x:Name="btCopyHex" Margin="5,0,0,0" ToolTipService.ToolTip="Copy Full Hex code with alpha value from color picker">
                        <Button.Content>
                            <StackPanel>
                                <SymbolIcon Symbol="Copy"/>
                                <TextBlock Text="Hex"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>

                    <Button x:Name="btCopyHexNoAlpha" Margin="5,0,0,0" ToolTipService.ToolTip="Copy hex code with OUT alpha value from color picker">
                        <Button.Content>
                            <StackPanel>
                                <SymbolIcon Symbol="Copy"/>
                                <TextBlock Text="# No Alpha"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>

                    <Button x:Name="btCopyRGB" Margin="5,0,0,0" ToolTipService.ToolTip="Copy RGB values from color picker">
                        <Button.Content>
                            <StackPanel>
                                <SymbolIcon Symbol="Copy"/>
                                <TextBlock Text="RGB"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>

                </StackPanel>


            </StackPanel>



            <!-- Right Column: Element Lists & List View/Data View -->


            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,0,5,0">



                <!-- Add and Remove Element States -->
                <ComboBox x:Name="comboElementStates" ItemsSource="{x:Bind ColorPaletteData.ElementStates}" Margin="5,0,5,0"
                          Width="150" IsEditable="True" Header="Element States"/>


                <Button x:Name="AddStateButton" Margin="0,25,2,0" Height="30" Click="AddState_Click">
                    <Button.Content>
                        <FontIcon Glyph="&#xe710;" FontSize="10" Margin="0"/>
                    </Button.Content>
                </Button>

                <Button x:Name="RemoveStateButton" Margin="0,25,2,0" Height="30">
                    <Button.Content>
                        <FontIcon Glyph="&#xe738;" FontSize="10" Margin="0"/>
                    </Button.Content>
                    <Button.Flyout>
                        <Flyout x:Name="RemoveStateFlyout">
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                    <Setter Property="IsTabStop" Value="True"/>
                                    <Setter Property="TabNavigation" Value="Cycle"/>
                                </Style>
                            </Flyout.FlyoutPresenterStyle>
                            <StackPanel HorizontalAlignment="Center">
                                <TextBlock Style="{ThemeResource BaseTextBlockStyle}" Text="All elements using this state will be updated to a blank state. Do you want to continue?" Margin="0,0,0,12" />
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Button Content="Yes" Click="RemoveStateConfirmation_Click" />
                                </StackPanel>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>


                <!-- Add and Remove Element Groups -->
                <ComboBox x:Name="comboElementGroups" ItemsSource="{x:Bind ColorPaletteData.ElementGroups}" Margin="5,0,5,0"
                          Width="150" IsEditable="True" Header=" Element Groups"/>


                <Button x:Name="AddGroupButton" Margin="0,25,2,0" Height="30" Click="AddGroup_Click">
                    <Button.Content>
                        <FontIcon Glyph="&#xe710;" FontSize="10" Margin="0"/>
                    </Button.Content>
                </Button>

                <Button x:Name="RemoveGroupButton" Margin="0,25,2,0" Height="30">
                    <Button.Content>
                        <FontIcon Glyph="&#xe738;" FontSize="10" Margin="0"/>
                    </Button.Content>
                    <Button.Flyout>
                        <Flyout x:Name="RemoveGroupFlyout">
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                    <Setter Property="IsTabStop" Value="True"/>
                                    <Setter Property="TabNavigation" Value="Cycle"/>
                                </Style>
                            </Flyout.FlyoutPresenterStyle>
                            <StackPanel HorizontalAlignment="Center">
                                <TextBlock Style="{ThemeResource BaseTextBlockStyle}" Text="All elements using this group will be updated to a blank state. Do you want to continue?" Margin="0,0,0,12" />
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Button Content="Yes" Click="RemoveGroupConfirmation_Click" />
                                </StackPanel>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>

            </StackPanel>

            <!--    Column 1     Row 1    -->

            <ToggleSwitch x:Name="IsAssignButtonEnabled" 
                          Grid.Row="1" Grid.Column="1" Margin="20,0,0,0"
                          
                          Toggled="IsColorAssign_Toggle">

                <ToggleSwitch.OffContent>
                    <FontIcon Glyph="&#xe72e;"/>
                </ToggleSwitch.OffContent>
                <ToggleSwitch.OnContent>
                    <FontIcon Glyph="&#xe785;"/>
                </ToggleSwitch.OnContent>
            </ToggleSwitch>


            <ListView x:Name="ColorPaletteListView" Grid.Row="2" Grid.Column="1" IsItemClickEnabled="True" SelectionMode="Single"
                      ScrollViewer.HorizontalScrollMode="Auto" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollMode="Auto" 
                      Margin="0,0,0,0">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="local:ColorEntry">
                        <Grid Padding="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>

                            <Button x:Name="AssignColorButton" Grid.Column="0" Click="AssignColor_Click" VerticalAlignment="Center" ToolTipService.ToolTip="Assign Currently Selected Color"
                                    Width="35" Height="30" Margin="15,0,0,0" IsEnabled="{x:Bind IsColorAssignEnabled}">
                                <Button.Content>
                                    <FontIcon Glyph="&#xe7fd;" FontSize="16"/>
                                </Button.Content>
                            </Button>

                            <Button Grid.Column="1" Style="{StaticResource CustomButtonStyle}" Background="{Binding HexCode, Converter={StaticResource HexToBrushConverter}}"
                                    Click="CopyHexCode_Click" VerticalAlignment="Center" Width="40" Height="30" Margin="0,0,10,0" ToolTipService.ToolTip="Copy Hex Code to Clipboard">
                                <Button.Content>
                                    <SymbolIcon Symbol="Copy"/>
                                </Button.Content>
                            </Button>

                            <TextBox Grid.Column="2" Text="{x:Bind ElementName, Mode=TwoWay}" VerticalAlignment="Center" TextWrapping="Wrap" Width="200" ToolTipService.ToolTip="Name of the Element" />
                            <ComboBox Grid.Column="3" SelectedItem="{x:Bind ElementState, Mode=TwoWay}" VerticalAlignment="Center" Width="150" Margin="5,0,5,0"
                                      Loaded="ElementStateComboBox_Loaded" ToolTipService.ToolTip="Select an Element State for the Element"/>

                            <ComboBox Grid.Column="4" SelectedItem="{x:Bind ElementGroup, Mode=TwoWay}" VerticalAlignment="Center" Width="150" Margin="5,0,5,0"
                                      Loaded="ElementGroupComboBox_Loaded" ToolTipService.ToolTip="Select a Group or Layer for the Color Element"/>

                            <TextBox Grid.Column="5" Text="{x:Bind HexCode, Mode=TwoWay}" VerticalAlignment="Center" Width="115" ToolTipService.ToolTip="Either a 6 or 8 digit Hexidecimal Code"/>

                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

        </Grid>
    </Grid>
</Window>
